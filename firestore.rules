
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Regras para a coleção 'users'
    match /users/{userId} {
      allow get: if request.auth != null;
      allow list: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'admin';
      // Permite criação de usuário por admin ou no processo de signup inicial (se houver)
      allow create: if request.auth != null && 
                      (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'admin' || request.auth.uid == userId);
      allow update: if request.auth != null && 
                      (request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'admin');
      allow delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'admin';
    }

    // Regras para a coleção 'crm_leads'
    match /crm_leads/{leadId} {
      allow list: if request.auth != null &&
                    (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'admin' ||
                     get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'vendedor');
      allow get: if request.auth != null &&
                   (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'admin' ||
                    get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'vendedor');

      // Vendedores e Admins podem criar leads.
      // Webhook também pode criar leads se certas condições forem atendidas.
      allow create: if (request.auth != null &&
                       (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'admin' ||
                        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'vendedor' && request.resource.data.userId == request.auth.uid)
                       )
                      ) ||
                      (request.auth == null && // Condição para webhook
                       request.resource.data.name != null &&
                       request.resource.data.phone != null &&
                       request.resource.data.stageId == 'contato' &&
                       request.resource.data.leadSource == 'WhatsApp' &&
                       request.resource.data.userId != null // Garante que o backend atribuiu um vendedor via userId
                      );

      // Admin pode atualizar qualquer lead.
      // Vendedor pode atualizar seu próprio lead (verificando o userId do lead).
      allow update: if request.auth != null &&
                      (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'admin' ||
                       (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'vendedor' && resource.data.userId == request.auth.uid && request.resource.data.userId == request.auth.uid));
      
      allow delete: if request.auth != null &&
                      get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'admin';
    }

    // Regras para a coleção 'crm_lead_chats'
    match /crm_lead_chats/{leadId} {
        allow read, write: if request.auth != null &&
                           (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'admin' ||
                            (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'vendedor' &&
                             exists(/databases/$(database)/documents/crm_leads/$(leadId)) &&
                             get(/databases/$(database)/documents/crm_leads/$(leadId)).data.userId == request.auth.uid 
                            )
                           );
    }

    // Regras para a coleção 'withdrawal_requests'
    match /withdrawal_requests/{requestId} {
      allow create: if request.auth != null && 
                       request.resource.data.userId == request.auth.uid; // Usuário só pode criar para si mesmo

      allow list: if request.auth != null &&
                    get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'admin'; // Apenas admin lista todos

      allow get: if request.auth != null &&
                   (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'admin' ||
                    resource.data.userId == request.auth.uid); // Admin ou dono do request

      allow update: if request.auth != null &&
                      get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'admin'; // Apenas admin atualiza

      allow delete: if request.auth != null &&
                      get(/databases/$(database)/documents/users/$(request.auth.uid)).data.type == 'admin'; // Apenas admin deleta
    }
  }
}
